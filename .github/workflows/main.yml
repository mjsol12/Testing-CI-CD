name: Sync Sub-Development with Deployment

on:
  push:
    branches:
      - main # Trigger when changes are pushed to the 'main' branch
  repository_dispatch:  # Allow manual triggering from the GitHub Actions UI
    types:
      - deploy
  workflow_dispatch:
    inputs:
      user_name:
        description: "Developer's Git Name"
        required: true
      user_email:
        description: "Developer's Git Email"
        required: true

jobs:
  sync:
    runs-on: ubuntu-latest
    
    env:
      DEPLOYMENT_PAT_ENV: ${{ secrets.DEPLOY_PAT_MAIN }} # Inject the secret into an environment variable
      PREFIX_PATH: clone 


    steps:
    - name: Checkout Sub-Development Repository
      uses: actions/checkout@v3

    - name: Configure Git Identity
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
    
    - name: Clean Working Tree
      run: |
          echo "Checking for uncommitted changes..."
          if ! git diff-index --quiet HEAD --; then
            echo "Uncommitted changes found. Stashing them..."
            git stash --include-untracked
          else
            echo "Working tree is clean."
          fi
  
    - name: Add or Update Subtree
      run: |
          echo "Fetching remote repository..."
          git fetch https://mjsol12:$DEPLOYMENT_PAT_ENV@github.com/mjsol12/Star-Wars-Data-Explorer.git main
          
          echo "Checking if subtree exists..."
          if git ls-tree --name-only HEAD | grep -q "^$PREFIX_PATH$"; then
            echo "Subtree exists. Pulling latest changes..."
            git subtree pull --prefix=$PREFIX_PATH https://mjsol12:$DEPLOYMENT_PAT_ENV@github.com/mjsol12/Star-Wars-Data-Explorer.git main
          else
            echo "Subtree does not exist. Adding subtree..."
            git subtree add --prefix=$PREFIX_PATH https://mjsol12:$DEPLOYMENT_PAT_ENV@github.com/mjsol12/Star-Wars-Data-Explorer.git main --squash
          fi
  
    - name: Restore Stashed Changes (if any)
      run: |
          if git stash list | grep -q "stash@{0}"; then
            echo "Restoring stashed changes..."
            git stash pop
          else
            echo "No stashed changes to restore."
          fi
  
    - name: Commit and Push Changes
      run: |
          echo "Committing and pushing changes..."
          git add .
          git commit -m "Sync subtree from Star-Wars-Data-Explorer" || echo "No changes to commit."
          git push origin main || echo "No changes to push."
